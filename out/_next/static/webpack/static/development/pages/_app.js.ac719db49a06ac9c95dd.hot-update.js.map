{"version":3,"file":"static/webpack/static/development/pages/_app.js.ac719db49a06ac9c95dd.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import Layout from '../components/Layout'\nimport Header from '../components/Header'\n\nconst links = [\n  {\n    \"name\": \"About\",\n    \"href\": \"/about/\"\n  },\n  {\n    \"name\": \"Directions\",\n    \"href\": \"/directions/\"\n  },\n  {\n    \"name\": \"Things to do\",\n    \"href\": \"/things-to-do/\"\n  },\n  {\n    \"name\": \"Photo Gallery\",\n    \"href\": \"/photo-gallery/\"\n  },\n  {\n    \"name\": \"Contact\",\n    \"href\": \"/contact/\"\n  }\n]\n\nfunction MyApp({ Component, pageProps }) {\n  const { canonical, pageTitle, activeTab } = pageProps\n\n  return (\n    <Layout>\n      <Header \n        pageTitle={pageTitle} \n        canonical={canonical} \n        links={links}\n        activeTab={activeTab} \n      />\n      <Component {...pageProps} />\n    </Layout>\n  )\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}