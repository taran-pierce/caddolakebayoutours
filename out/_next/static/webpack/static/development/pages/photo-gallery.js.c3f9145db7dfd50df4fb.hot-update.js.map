{"version":3,"file":"static/webpack/static/development/pages/photo-gallery.js.c3f9145db7dfd50df4fb.hot-update.js","sources":["webpack:///./components/ImageGallery.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { Image, CloudinaryContext, Transformation } from 'cloudinary-react'\n\nimport './imageGallery.scss'\n\nconst galleryName = 'gallery/caddo-lake-'\n\nclass ImageGallery extends React.Component {\n  constructor( props ) {\n    super( props )\n  \n    this.state = {\n      currentSlide: 1,\n      lastSlide: 11,\n      lightBoxOpen: false,\n    }\n\n    this.previousImage = this.previousImage.bind(this)\n    this.nextImage = this.nextImage.bind(this)\n  }\n\n  nextImage( event ) {\n    event.preventDefault()\n\n    let nextSlide = this.state.currentSlide + 1\n\n    if ( this.state.currentSlide != this.state.lastSlide ) {\n      this.setState({ currentSlide: nextSlide })\n    }\n  }\n\n  previousImage( event ) {\n    event.preventDefault()\n\n    let previousSlide = this.state.currentSlide - 1\n\n    if ( this.state.currentSlide != 1 ) {\n      this.setState({ currentSlide: previousSlide })\n    }\n  }\n  \n  toggleLightBox( event ) {\n    event.preventDefault()\n  \n    this.setState({ lightBoxOpen: !lightBoxOpen })\n  }\n  \n  render() {\n    const { currentSlide, lightBoxOpen } = this.state\n\n    return (\n      <section className={`image-gallery`}>\n        <h2>Pictures of Caddo Lake</h2>\n        <div className={`gallery-container`}>\n          <ul>\n            <li>\n              <CloudinaryContext cloudName=\"tpierce36\">\n                <a \n                  href={`https://res.cloudinary.com/tpierce36/image/upload/v1578238226/${galleryName}${currentSlide}.jpg`}\n                  onClick={( event ) => this.toggleLightBox() }\n                >\n                  <Image \n                    publicId={`${galleryName}${currentSlide}.jpg`}\n                    responsive\n                    width=\"auto\"\n                    crop=\"scale\"\n                    alt={`Caddo Lake #${currentSlide}`}\n                  >\n                    <Transformation quality=\"auto\" fetchFormat=\"auto\" />\n                  </Image>\n                </a>\n              </CloudinaryContext>\n            </li>\n          </ul>\n          <nav>\n            <ul>\n              <li>\n                <a className={`btn ${currentSlide == 1 && 'disabled'}`} onClick={this.previousImage}>Previous</a>\n              </li>\n              <li>\n                <a className={`btn ${currentSlide == 11 && 'disabled'}`} onClick={this.nextImage}>Next</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n       {lightBoxOpen && (\n        <div  className={`light-box`}>\n          <h4>Test</h4>\n        </div>\n       )}\n      </section>\n    )\n  }\n}\n\nImageGallery.propTypes = {\n  currentSlide: PropTypes.number,\n  previousImage: PropTypes.func,\n  nextImage: PropTypes.func,\n}\n\nexport default ImageGallery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AArFA;AACA;AAuFA;AACA;AACA;AACA;AAHA;AAMA;;;;A","sourceRoot":""}