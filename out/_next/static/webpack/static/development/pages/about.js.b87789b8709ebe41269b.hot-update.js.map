{"version":3,"file":"static/webpack/static/development/pages/about.js.b87789b8709ebe41269b.hot-update.js","sources":["webpack:///./components/TextBlock.js"],"sourcesContent":["import PropTypes from 'prop-types'\n\nimport './textBlock.scss'\n\nconst TextBlock = ( props ) => {\n  const { titles, paragraphs, lists } = props.data\n\n  return (\n    <div className={`text-wrapper`}>\n      {/* Look for titles and loop through them */}\n      {/* They include their own markup */}\n      {titles.map( ( title, index ) => (\n        <div key={index} dangerouslySetInnerHTML={{__html: title}} />\n      ))}\n\n      {/* Look for and loop through paragraphs */}\n      {paragraphs.map( ( paragraph, index) => (\n        <p key={index} dangerouslySetInnerHTML={{__html: paragraph}} />\n      ))}\n      \n      {/* Look for and loop through lists */}\n      {lists && props.data.lists.map( (list, index) => (\n        // check to see if it is a UL\n        list.type === 'ul' ? (\n          <ul key={index}>\n            {list.items.map( (item, index) => (\n              <li key={index}>\n                {/* if there is a title passed put it in an H4 */}\n                {item.title && (\n                  <h4>{item.title}</h4>\n                )}\n                {item.paragraphs.map( (paragraph, index) => (\n                  <p key={index}>{paragraph}</p>\n                ))}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          // use an OL otherwise\n          <ol key={index}>\n            {list.items.map( (item, index) => (\n              <li key={index}>\n                {/* if there is a title passed put it in an H4 */}\n                {item.title && (\n                  <h4>{item.title}</h4>\n                )}\n                {item.paragraphs.map( (paragraph, index) => (\n                  <p key={index}>{paragraph}</p>\n                ))}\n              </li>\n            ))}\n          </ol>\n        )\n      ))}\n    </div>\n  )\n}\n\nTextBlock.propTypes = {\n  data: PropTypes.object,\n}\n\nexport default TextBlock"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AAnBA;AAAA;AAmCA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}